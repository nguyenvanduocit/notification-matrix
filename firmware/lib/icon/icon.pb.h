/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ICON_PB_H_INCLUDED
#define PB_ICON_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _IconID {
    IconID_CHECK = 0,
    IconID_BOX = 1,
    IconID_CROSS = 2
} IconID;

/* Struct definitions */
typedef struct _IconArg {
    IconID icon_id;
} IconArg;


/* Helper constants for enums */
#define _IconID_MIN IconID_CHECK
#define _IconID_MAX IconID_CROSS
#define _IconID_ARRAYSIZE ((IconID)(IconID_CROSS+1))


/* Initializer values for message structs */
#define IconArg_init_default                     {_IconID_MIN}
#define IconArg_init_zero                        {_IconID_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define IconArg_icon_id_tag                      2

/* Struct field encoding specification for nanopb */
#define IconArg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    icon_id,           2)
#define IconArg_CALLBACK NULL
#define IconArg_DEFAULT NULL

extern const pb_msgdesc_t IconArg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define IconArg_fields &IconArg_msg

/* Maximum encoded size of messages (where known) */
#define IconArg_size                             2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
